{"version":3,"sources":["keys.js","utils/API.js","components/BookResults/BookResults.js","components/BookSearch/BookSearch.js","pages/BookResults.js","components/BookSaved/BookSaved.js","pages/BookSaved.js","components/Navbar/Navbar.js","components/Footer/Footer.js","components/Jumbotron/Jumbotron.js","App.js","serviceWorker.js","index.js"],"names":["exports","google_books","apiKey","process","REACT_APP_GOOGLE_BOOKS_API","require","config","keys","query","axios","get","deletedBook","method","url","bookData","data","BookResults","props","className","volumeInfo","title","previewLink","type","target","rel","href","id","bookIndex","onClick","saveBook","authors","map","author","index","imageLinks","thumbnail","src","alt","description","BookSearch","name","style","width","placeholder","onChange","handleSearchChange","handleBookSearch","state","bookSearch","booksData","event","value","setState","API","then","res","undefined","items","bookClicked","preventDefault","savedBookData","link","imageURL","currentBooksData","splice","catch","err","console","log","this","length","book","searchInfo","key","Component","BookSaved","bookID","deleteBook","savedBooksData","renderSavedBooks","_id","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Footer","Jumbotron","App","exact","path","component","BookResultsPage","BookSavedPage","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2KAAAA,EAAQC,aAAe,CACnBC,OAAQC,mHAAYC,6B,6SCCxBC,EAAQ,IAAUC,SAElB,IAEMC,EAAOF,EAAQ,IAEN,EACK,SAAUG,GACtB,OAAOC,IAAMC,IAAI,iDAAmDF,EAAQ,QAAQD,EAAKN,aAAaC,SAF/F,EAII,WACX,OAAOO,IAAMC,IAAa,qBALnB,EAOC,SAASC,GACjB,OAAOF,IAAM,CAACG,OAAO,SAAUC,IAAc,qBAAuBF,KAR7D,EAUD,SAASG,GACf,OAAOL,IAAM,CAACG,OAAO,OAAQC,IAAc,aAAcE,KAAMD,K,MC8BxDE,MA9Cf,SAAqBC,GACjB,OACI,yBAAKC,UAAU,kBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACVD,EAAME,YAAcF,EAAME,WAAWC,OAClC,wBAAIF,UAAU,cAAa,gCAASD,EAAME,WAAWC,SAG7D,yBAAKF,UAAU,YACVD,EAAME,YAAcF,EAAME,WAAWE,aAClC,uBAAGH,UAAU,kCAAkCI,KAAK,SAASC,OAAO,SAASC,IAAI,sBAAsBC,KAAMR,EAAME,WAAWE,aAA9H,QAEJ,4BAAQH,UAAU,kCAAkCI,KAAK,SAASI,GAAIT,EAAMU,UAAWC,QAASX,EAAMY,UAAtG,UAGPZ,EAAME,YAAcF,EAAME,WAAWW,SAClC,uBAAGZ,UAAU,aAAb,cAAqCD,EAAME,WAAWW,QAAQC,KAAI,SAACC,EAAQC,GACvE,OAAc,IAAVA,EACOD,EAEA,KAAOA,MAK1B,yBAAKd,UAAU,OACX,yBAAKA,UAAU,YACVD,EAAME,WAAWe,YAAcjB,EAAME,WAAWe,WAAWC,WACxD,yBAAKC,IAAKnB,EAAME,WAAWe,WAAWC,UAAWE,IAAKpB,EAAME,WAAWC,MAAOF,UAAU,mBAGhG,yBAAKA,UAAU,YACVD,EAAME,YAAcF,EAAME,WAAWmB,aAClC,2BAAIrB,EAAME,WAAWmB,mB,MCtBtCC,MAdf,SAAoBtB,GAChB,OAEI,yBAAKC,UAAU,aACX,8BACI,yBAAKA,UAAU,cACX,2BAAOsB,KAAK,aAAalB,KAAK,OAAOJ,UAAU,cAAcQ,GAAG,kBAAkBe,MAAO,CAACC,MAAO,QAASC,YAAY,iCAAiCC,SAAU3B,EAAM4B,qBACvK,4BAAQ3B,UAAU,gCAAgCI,KAAK,SAASI,GAAG,gBAAgBE,QAASX,EAAM6B,kBAAlG,cCkFL9B,E,4MArFX+B,MAAQ,CACJC,WAAY,GACZC,UAAW,I,EAGfJ,mBAAqB,SAAAK,GAAU,IAAD,EACFA,EAAM3B,OAAtBiB,EADkB,EAClBA,KAAMW,EADY,EACZA,MACd,EAAKC,SAAL,eACKZ,EAAOW,K,EAIhBL,iBAAmB,WACfO,EAAmB,EAAKN,MAAMC,YAAYM,MAAK,SAAAC,GAAG,YAAwBC,IAAnBD,EAAIxC,KAAK0C,MAAuB,EAAKL,SAAS,CAAEH,UAAWM,EAAIxC,KAAK0C,QAAW,EAAKL,SAAS,CAAEH,UAAW,S,EAGrKpB,SAAW,SAAAqB,GACP,IAAIQ,EAAcR,EAAM3B,OAAOG,GAC/BwB,EAAMS,iBACN,IAAIC,EAAgB,CAChBxC,MAAO,EAAK2B,MAAME,UAAUS,GAAavC,WAAWC,MACpDY,OAAQ,EAAKe,MAAME,UAAUS,GAAavC,WAAWW,QACrD+B,KAAM,EAAKd,MAAME,UAAUS,GAAavC,WAAWE,YACnDyC,SAAU,EAAKf,MAAME,UAAUS,GAAavC,WAAWe,WAAWC,UAClEG,YAAa,EAAKS,MAAME,UAAUS,GAAavC,WAAWmB,aAG1DyB,EAAmB,EAAKhB,MAAME,UAClCc,EAAiBC,OAAON,EAAa,GAErCL,EAAaO,GAAeN,MAAK,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAEH,UAAWc,OAAqBE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,uDAG3G,IAAD,OAEL,OAAgC,IADTG,KAAKtB,MAAME,UACbqB,OAEb,6BACI,yBAAKpD,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAI,qDACJ,kBAAC,EAAD,CACI2B,mBAAoBwB,KAAKxB,mBACzBC,iBAAkBuB,KAAKvB,oBAG/B,yBAAK5B,UAAU,OACX,4BAAI,4CACHmD,KAAKtB,MAAME,UAAUlB,KAAI,SAACwC,EAAMtC,GAAP,OACtB,kBAAC,EAAD,CACId,WAAYoD,EAAKpD,WACjBqD,WAAYD,EAAKC,WACjB3C,SAAU,EAAKA,SACfF,UAAWM,EACXwC,IAAKxC,UAU7B,6BACI,yBAAKf,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAI,qDACJ,kBAAC,EAAD,CACI2B,mBAAoBwB,KAAKxB,mBACzBC,iBAAkBuB,KAAKvB,oBAG/B,yBAAK5B,UAAU,OACX,4BAAI,6CAER,yBAAKA,UAAU,OACX,uD,GA/EEwD,a,MC2CXC,MA7Cf,SAAmB1D,GACf,OACI,yBAAKC,UAAU,kBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACVD,EAAMG,OACH,wBAAIF,UAAU,cAAa,gCAASD,EAAMG,SAGlD,yBAAKF,UAAU,YACVD,EAAM4C,MACH,uBAAG3C,UAAU,kCAAkCI,KAAK,SAASC,OAAO,SAASC,IAAI,sBAAsBC,KAAMR,EAAM4C,MAAnH,QAEJ,4BAAQ3C,UAAU,iCAAiCQ,GAAIT,EAAM2D,OAAQhD,QAASX,EAAM4D,WAAYvD,KAAK,UAArG,YAGPL,EAAMe,QACH,uBAAGd,UAAU,aAAb,cAAqCD,EAAMe,OAAOD,KAAI,SAACC,EAAQC,GAC3D,OAAc,IAAVA,EACOD,EAEA,KAAOA,MAI1B,yBAAKd,UAAU,OACX,yBAAKA,UAAU,YACVD,EAAM6C,UACH,yBAAK1B,IAAKnB,EAAM6C,SAAUzB,IAAKpB,EAAMG,MAAOF,UAAU,mBAG9D,yBAAKA,UAAU,YACVD,EAAMqB,aACH,2BAAIrB,EAAMqB,mBC4B3BqC,E,4MA5DX5B,MAAQ,CACJ+B,eAAgB,I,EAOpBD,WAAa,SAAA3B,GACTA,EAAMS,iBACN,IAAID,EAAcR,EAAM3B,OAAOG,GAE/B2B,EAAeK,GAAaJ,MAAK,SAAAC,GAAG,OAAI,EAAKwB,sBAAoBd,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,EAG9Fa,iBAAmB,WACf1B,IAAoBC,MAAK,SAAAC,GAAG,OAAI,EAAKH,SAAS,CAAE0B,eAAgBvB,EAAIxC,UAASkD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,O,kEAXtGG,KAAKU,qB,+BAcC,IAAD,OAEL,OAAiC,IADTV,KAAKtB,MAAM+B,eACbR,OAEd,6BACI,yBAAKpD,UAAU,aACX,yBAAKA,UAAY,OACb,4BAAI,gDACHmD,KAAKtB,MAAM+B,eAAe/C,KAAI,SAACwC,EAAKtC,GAAN,OAC3B,kBAAC,EAAD,CACI2C,OAAQL,EAAKS,IACb5D,MAAOmD,EAAKnD,MACZY,OAAQuC,EAAKvC,OACb6B,KAAMU,EAAKV,KACXC,SAAUS,EAAKT,SACfxB,YAAaiC,EAAKjC,YAClBuC,WAAY,EAAKA,WACjBJ,IAAKxC,UAU7B,6BACI,yBAAKf,UAAU,aACX,yBAAKA,UAAU,OACX,4BAAI,iDAER,yBAAKA,UAAU,OACX,oD,GAtDAwD,a,MCgBTO,MAjBf,SAAgBhE,GACZ,OACI,yBAAKC,UAAU,yDACX,uBAAGA,UAAU,eAAeO,KAAK,KAAjC,uBACA,4BAAQP,UAAU,iBAAiBI,KAAK,SAAS4D,cAAY,WAAWC,cAAY,sBAAsBC,gBAAc,qBAAqBC,gBAAc,QAAQC,aAAW,qBAC1K,0BAAMpE,UAAU,yBAEpB,yBAAKA,UAAU,2BAA2BQ,GAAG,sBACzC,yBAAKR,UAAU,cACX,uBAAGA,UAAU,oBAAoBO,KAAK,KAAtC,UACA,uBAAGP,UAAU,oBAAoBO,KAAK,UAAtC,a,MCAL8D,MAVf,SAAgBtE,GACZ,OACI,4BAAQC,UAAU,4BACd,yBAAKA,UAAU,aACX,uBAAGO,KAAK,KAAR,0B,MCOD+D,MAXf,SAAmBvE,GACf,OACI,yBAAKC,UAAU,6BACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,aAAd,uBACA,uBAAGA,UAAU,QAAb,0CAA2D,uBAAGO,KAAK,6BAAR,oBCmB5DgE,G,6KAfX,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,SAASC,UAAWE,KAExC,kBAAC,EAAD,Y,GAZQpB,cCGEqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpD,MAAK,SAAAqD,GACjCA,EAAaC,kB","file":"static/js/main.c9d4f483.chunk.js","sourcesContent":["exports.google_books = {\r\n    apiKey: process.env.REACT_APP_GOOGLE_BOOKS_API\r\n  };","import axios from \"axios\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nconst apiUrl = process.env.NODE_ENV === 'production'? '' : '//localhost:3001'\r\n\r\nconst keys = require(\"../keys.js\");\r\n\r\nexport default {\r\n    getBookResults: function (query) {\r\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query + \"&key=\"+keys.google_books.apiKey)\r\n    },\r\n    getSavedBooks: function() {\r\n        return axios.get(apiUrl + \"/api/books/saved\");\r\n    },\r\n    deleteBook: function(deletedBook) {\r\n        return axios({method:\"delete\", url: apiUrl + \"/api/books/delete/\" + deletedBook});\r\n    },\r\n    saveBook: function(bookData) {\r\n        return axios({method:\"post\", url: apiUrl + \"/api/books\", data: bookData })\r\n    }\r\n};","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction BookResults(props) {\r\n    return (\r\n        <div className=\"col-md-12 mt-2\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body col-md-12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            {props.volumeInfo && props.volumeInfo.title &&\r\n                                <h5 className=\"card-title\"><strong>{props.volumeInfo.title}</strong></h5>\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            {props.volumeInfo && props.volumeInfo.previewLink &&\r\n                                <a className=\"btn btn-primary m-1 float-right\" type=\"button\" target=\"_blank\" rel=\"noopener noreferrer\" href={props.volumeInfo.previewLink}>View</a>\r\n                            }\r\n                            <button className=\"btn btn-success m-1 float-right\" type=\"button\" id={props.bookIndex} onClick={props.saveBook}>Save</button>\r\n                        </div>\r\n                    </div>\r\n                    {props.volumeInfo && props.volumeInfo.authors &&\r\n                        <p className=\"card-text\">Written by {props.volumeInfo.authors.map((author, index) => {\r\n                            if (index === 0) {\r\n                                return author\r\n                            } else {\r\n                                return \", \" + author\r\n                            }\r\n                        })\r\n                        }</p>\r\n                    }\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            {props.volumeInfo.imageLinks && props.volumeInfo.imageLinks.thumbnail &&\r\n                                <img src={props.volumeInfo.imageLinks.thumbnail} alt={props.volumeInfo.title} className=\"img-thumbnail\" />\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            {props.volumeInfo && props.volumeInfo.description &&\r\n                                <p>{props.volumeInfo.description}</p>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BookResults;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction BookSearch(props) {\r\n    return (\r\n\r\n        <div className=\"col-md-12\">\r\n            <form>\r\n                <div className=\"form-group\">\r\n                    <input name=\"bookSearch\" type=\"text\" className=\"formControl\" id=\"bookSearchInput\" style={{width: \"100%\"}} placeholder=\"Enter your search term here...\" onChange={props.handleSearchChange}></input>\r\n                    <button className=\"btn btn-dark float-right mt-1\" type=\"button\" id=\"bootSearchBtn\" onClick={props.handleBookSearch}>Search</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BookSearch;\r\n","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport BookResultsComponent from \"../components/BookResults/BookResults\";\r\nimport BookSearch from \"../components/BookSearch/BookSearch\";\r\n\r\nclass BookResults extends Component {\r\n\r\n    state = {\r\n        bookSearch: \"\",\r\n        booksData: []\r\n    }\r\n\r\n    handleSearchChange = event => {\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    handleBookSearch = () => {\r\n        API.getBookResults(this.state.bookSearch).then(res => (res.data.items !== undefined) ? this.setState({ booksData: res.data.items }) : this.setState({ booksData: [] }))\r\n    }\r\n\r\n    saveBook = event => {\r\n        var bookClicked = event.target.id;\r\n        event.preventDefault();\r\n        var savedBookData = {\r\n            title: this.state.booksData[bookClicked].volumeInfo.title,\r\n            author: this.state.booksData[bookClicked].volumeInfo.authors,\r\n            link: this.state.booksData[bookClicked].volumeInfo.previewLink,\r\n            imageURL: this.state.booksData[bookClicked].volumeInfo.imageLinks.thumbnail,\r\n            description: this.state.booksData[bookClicked].volumeInfo.description\r\n        }\r\n\r\n        var currentBooksData = this.state.booksData;\r\n        currentBooksData.splice(bookClicked, 1);\r\n\r\n        API.saveBook(savedBookData).then(res => this.setState({ booksData: currentBooksData })).catch(err => console.log(err));;\r\n    }\r\n\r\n    render() {\r\n        var currentBooksData = this.state.booksData;\r\n        if (currentBooksData.length !== 0) {\r\n            return (\r\n                <div>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <h4><strong>Search for Books</strong></h4>\r\n                            <BookSearch\r\n                                handleSearchChange={this.handleSearchChange}\r\n                                handleBookSearch={this.handleBookSearch}\r\n                            />\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <h3><strong>Results</strong></h3>\r\n                            {this.state.booksData.map((book, index) => (\r\n                                <BookResultsComponent\r\n                                    volumeInfo={book.volumeInfo}\r\n                                    searchInfo={book.searchInfo}\r\n                                    saveBook={this.saveBook}\r\n                                    bookIndex={index}\r\n                                    key={index}\r\n                                />\r\n                            ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4><strong>Search for Books</strong></h4>\r\n                        <BookSearch\r\n                            handleSearchChange={this.handleSearchChange}\r\n                            handleBookSearch={this.handleBookSearch}\r\n                        />\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <h3><strong>Results</strong></h3>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p>No search results</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookResults;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction BookSaved(props) {\r\n    return (\r\n        <div className=\"col-md-12 mt-2\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body col-md-12\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-8\">\r\n                            {props.title &&\r\n                                <h5 className=\"card-title\"><strong>{props.title}</strong></h5>\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-md-4\">\r\n                            {props.link &&\r\n                                <a className=\"btn btn-primary m-1 float-right\" type=\"button\" target=\"_blank\" rel=\"noopener noreferrer\" href={props.link}>View</a>\r\n                            }\r\n                            <button className=\"btn btn-danger m-1 float-right\" id={props.bookID} onClick={props.deleteBook} type=\"button\">Delete</button>\r\n                        </div>\r\n                    </div>\r\n                    {props.author &&\r\n                        <p className=\"card-text\">Written by {props.author.map((author, index) => {\r\n                            if (index === 0) {\r\n                                return author\r\n                            } else {\r\n                                return \", \" + author\r\n                            }\r\n                        })}</p>\r\n                    }\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-4\">\r\n                            {props.imageURL &&\r\n                                <img src={props.imageURL} alt={props.title} className=\"img-thumbnail\" />\r\n                            }\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            {props.description &&\r\n                                <p>{props.description}</p>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BookSaved;\r\n","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport BookSavedComponent from \"../components/BookSaved/BookSaved\";\r\n\r\nclass BookSaved extends Component {\r\n\r\n    state = {\r\n        savedBooksData: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.renderSavedBooks();\r\n    }\r\n\r\n    deleteBook = event => {\r\n        event.preventDefault();\r\n        var bookClicked = event.target.id;\r\n\r\n        API.deleteBook(bookClicked).then(res => this.renderSavedBooks()).catch(err => console.log(err));\r\n    }\r\n\r\n    renderSavedBooks = () => {\r\n        API.getSavedBooks().then(res => this.setState({ savedBooksData: res.data })).catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        var currentSavedBooks = this.state.savedBooksData;\r\n        if (currentSavedBooks.length !== 0) {\r\n            return (\r\n                <div>\r\n                    <div className=\"container\">\r\n                        <div className = \"row\">\r\n                            <h3><strong>Saved Books</strong></h3>\r\n                            {this.state.savedBooksData.map((book,index) => (\r\n                                <BookSavedComponent\r\n                                    bookID={book._id}\r\n                                    title={book.title}\r\n                                    author={book.author}\r\n                                    link={book.link}\r\n                                    imageURL={book.imageURL}\r\n                                    description={book.description}\r\n                                    deleteBook={this.deleteBook}\r\n                                    key={index}\r\n                                />\r\n                            ))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h3><strong>Saved Books</strong></h3>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <p>No saved books</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BookSaved;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Navbar(props) {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\">\r\n            <a className=\"navbar-brand\" href=\"/\">Google Books Search</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                <div className=\"navbar-nav\">\r\n                    <a className=\"nav-item nav-link\" href=\"/\">Search</a>\r\n                    <a className=\"nav-item nav-link\" href=\"/saved\">Saved</a>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <footer className=\"fixed-bottom footer-dark\">\r\n            <div className=\"container\">\r\n                <a href=\"/\">Google Books Search</a>\r\n            </div>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Jumbotron(props) {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">Google Books Search</h1>\r\n                <p className=\"lead\">Search for books that are available on <a href=\"https://books.google.com/\">Google Books</a></p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Jumbotron;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport BookResultsPage from \"./pages/BookResults\";\r\nimport BookSavedPage from \"./pages/BookSaved\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Footer from \"./components/Footer/Footer\"\r\nimport Jumbotron from \"./components/Jumbotron/Jumbotron\";\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <Navbar />\r\n          <Jumbotron />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={BookResultsPage} />\r\n            <Route exact path=\"/saved\" component={BookSavedPage} />\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}